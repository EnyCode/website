---
export interface Props {
	title: string;
	description: string;
	href: string;
    img: string;
    tags: string[];
}
import { getRandomInt } from '../util.js';


const { title, description, href, img, tags } = Astro.props;
const imgCSS = `url(${img})`;
const waveURL = '/svg/dark/wave-' + getRandomInt(1, 3) + '.svg';
---

<div class="article-card">
    <a href={href}>
        <img src={waveURL} alt="wave" class="wave" />
        <div class="description">
            <span class="title">{title}</span>
            <br />
            <span class="description">{description}</span>
        </div>
    </a>
    <div class="tags">
        {tags.map((tag) => (
            <a href={`/blog/tag/${tag}`}>{tag}</a>
        ))}
    </div>
</div>
<style lang="scss" define:vars= { { imgCSS } }>
    .article-card img {
        background-image: var(--imgCSS);
    }
</style>
<style lang="scss">
    .article-card {
        width: 18rem;
        height: 22rem;
        border-radius: 10px;
        background-color: var(--background-tertiary);
        box-shadow: rgb(0, 0, 0) 0px 3px 10px -3px;

        img {
            height: 12rem;
            border-radius: 10px 10px 0 0;
        }

        .description {
            padding: 0.5rem;

            .title {
                font-size: 1.3rem;
                font-weight: bold;

            }

            .description {
                color: var(--light-grey);
                height: 3rem;
                display: inline-block;
            }
        }

        .tags {
            display: flex;
            flex-direction: row;
            gap: 0.5rem;
            margin-left: 0.5rem;
            margin-top: 0.5rem;

            a {
                color: var(--light-grey);
                padding: 0 0.2rem;
                background-color: var(--background-color);
                border-radius: 5px;
                transition: transform 0.2s ease-in-out,
                    background-size 0.3s,
                    background-position 0s 0.3s;
                width: auto;

                &:hover {
                    transform: scale(1.1);
                }
            }
        }
    }
</style>
<!--
<li class="link-card">
    <a href={href} class={main == true ? 'main' : ''}>
        <div>
            <h2>
                {title}
                <span>&rarr;</span>
            </h2>
            <p>
                {description}
            </p>
        </div>
    </a>
    <div class="tags">
        {tags.map((tag) => (
            <a href={`/blog/tag/${tag}`}>{tag}</a>
        ))}
    </div>
</li>
<style define:vars={{ imgCSS }}>
    .link-card {
        background-image: var(--imgCSS);
    }
</style>
<style lang="scss">
    .link-card {
        border-radius: 10px;
        list-style: none;
        box-shadow: rgb(0, 0, 0) 0px 3px 10px -3px;
        background-size: 100%;
        background-position: center;
        transition: background-size 0.5s ease-in-out;

        height: 100%;

        a {
            width: calc(100% - 2rem);
            height: calc(100% - 2rem);
            border-radius: 10px 10px 0 0;

            padding: 1rem;

            backdrop-filter: brightness(73%);

            p {
                color: var(--text-color);
            }

            h2 {
                transition: color 0.5s ease-in-out;
            }

            &:hover {
                h2 {
                    color: var(--text-standout-hover);
                }
            }
        }
        .main {
            justify-content: flex-end;
            flex-direction: column;
            display: flex;
        }
    }

    .link-card:hover {
        background-size: 125%;
    }

    .tags {
        display: flex;
        gap: 0.5rem;
        backdrop-filter: brightness(55%);
        border-radius: 0 0 10px 10px;
        padding: 0.5rem;

        a {
            color: var(--light-grey);
            padding: 0 0.2rem;
            background-color: var(--background-color);
            border-radius: 5px;
            transition: transform 0.2s ease-in-out,
                background-size 0.3s,
                background-position 0s 0.3s;
            width: auto;

            &:hover {
                transform: scale(1.1);
            }
        }
    }
</style>
-->